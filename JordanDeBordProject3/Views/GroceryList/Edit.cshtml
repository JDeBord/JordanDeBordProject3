@model JordanDeBordProject3.Models.ViewModels.EditListVM

@{
    bool owner = (bool)ViewData["Owner"];
    var ownerName = ViewData["OwnerName"];
    var listToEdit = new EditListVM { ListName = Model.ListName, Id = Model.Id};
    var groceryItem = new CreateGroceryItemVM { GroceryListId=Model.Id};
}

<h1>Owner: @ownerName</h1>

<div id="alertArea" class="alert alert-warning" role="alert" style="display:none">
    <span id="messageArea"></span>
    <button id="alertCloseBtn" type="button" class="close" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<div id="permission-@Model.GroceryListUserId" class="row">
    <div class="col-md-12">
        @{if (owner)
            {
                <partial name="_EditOwner" model="@listToEdit" />
            }
            else
            {
                <partial name="_EditNonOwner" model="@Model" />
            }
        }
    </div>
</div>
<br />
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createGroceryItemModal">
    Add Item
</button>
<partial name="_AddGroceryItemModal" model="@groceryItem" />
<br />
<table class="table">
    <thead>
        <tr>
            <th>
                Item Name
            </th>
            <th>
                Quantity to Buy
            </th>
            <th></th>

        </tr>
    </thead>
    <tbody id="edit-list-@Model.Id">

        @foreach (var item in Model.GroceryItems)
        {
            <partial name="_AddItemListRow" model="@item" />
        }
    </tbody>
</table>
<div>
    <a class="btn btn-primary" asp-action="Index" asp-controller="Home">Back Home</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/groceryListEdit.js" defer></script>
}
